{"version":3,"sources":["components/Hour.jsx","components/Minute.jsx","components/Seconds.jsx","components/Clock.jsx","components/Optimization.jsx","components/App.jsx","index.js"],"names":["React","memo","_ref","hours","console","log","createElement","toString","padStart","min","sec","Clock","_useState","useState","Date","_useState2","_slicedToArray","time","setTime","_useState3","getHours","_useState4","setHours","_useState5","getMinutes","_useState6","setMin","_useState7","getSeconds","_useState8","setSec","setInterval","className","Hour","Minute","Seconds","App","Optimization","ReactDOM","render","document","getElementById"],"mappings":"yNAOeA,MAAMC,MALR,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAEd,OADAC,QAAQC,IAAI,kBACLL,IAAAM,cAAA,UAAI,IAAEH,EAAMI,WAAWC,SAAS,EAAG,KAAK,QCGlCR,MAAMC,MALN,SAAHC,GAAiB,IAAXO,EAAGP,EAAHO,IAEhB,OADAL,QAAQC,IAAI,gBACLL,IAAAM,cAAA,UAAI,IAAEG,EAAIF,WAAWC,SAAS,EAAG,KAAK,QCGhCR,MAAMC,MALL,SAAHC,GAAiB,IAAXQ,EAAGR,EAAHQ,IAEjB,OADAN,QAAQC,IAAI,gBACLL,IAAAM,cAAA,UAAI,IAAEI,EAAIH,WAAWC,SAAS,EAAG,KAAK,QCsChCG,EArCD,WACZ,IAAAC,EAAsBC,mBAAS,IAAIC,MAAOC,EAAAC,YAAAJ,EAAA,GAArCK,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAClBI,EAAwBN,mBAASI,EAAKG,YAAWC,EAAAL,YAAAG,EAAA,GAA5ChB,EAAKkB,EAAA,GAAEC,EAAQD,EAAA,GACpBE,EAAoBV,mBAASI,EAAKO,cAAaC,EAAAT,YAAAO,EAAA,GAA1Cd,EAAGgB,EAAA,GAAEC,EAAMD,EAAA,GAChBE,EAAoBd,mBAASI,EAAKW,cAAaC,EAAAb,YAAAW,EAAA,GAA1CjB,EAAGmB,EAAA,GAAEC,EAAMD,EAAA,GAEhBzB,QAAQC,IAAI,kBAoBZ,OAFA0B,aAhB0B,WACxBb,EAASD,EAAO,IAAIH,MAEhBX,IAAUc,EAAKG,YACjBE,EAASL,EAAKG,YAGZX,IAAQQ,EAAKO,cACfE,EAAOT,EAAKO,cAGVd,IAAQO,EAAKW,cACfE,EAAOb,EAAKW,gBAIe,KAG7B5B,IAAAM,cAAA,OAAK0B,UAAU,SACbhC,IAAAM,cAAC2B,EAAI,CAAC9B,MAAOA,IACbH,IAAAM,cAAA,UAAI,KACJN,IAAAM,cAAC4B,EAAM,CAACzB,IAAKA,IACbT,IAAAM,cAAA,UAAI,KACJN,IAAAM,cAAC6B,EAAO,CAACzB,IAAKA,MCnBLV,MAAMC,MAhBA,WAEnB,OADAG,QAAQC,IAAI,mCAEVL,IAAAM,cAAA,OAAK0B,UAAU,gBACbhC,IAAAM,cAAA,UAAI,iBACJN,IAAAM,cAAA,UACEN,IAAAM,cAAA,UAAI,0DACJN,IAAAM,cAAA,UAAI,oEAGJN,IAAAM,cAAA,UAAI,6CCGG8B,MAXf,WAGE,OAFAhC,QAAQC,IAAI,gBAGVL,IAAAM,cAAA,OAAK0B,UAAU,aACbhC,IAAAM,cAACK,EAAK,MACNX,IAAAM,cAAC+B,EAAY,QCNnBC,IAASC,OAAOvC,IAAAM,cAAC8B,EAAG,MAAKI,SAASC,eAAe,U","file":"static/js/main.1a04d3a2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Hour = ({ hours }) => {\n  console.log(\"hours rendered\");\n  return <h1> {hours.toString().padStart(2, '0')} </h1>;\n};\n\nexport default React.memo(Hour);\n","import React from \"react\";\n\nconst Minute = ({ min }) => {\n  console.log(\"min rendered\");\n  return <h1> {min.toString().padStart(2, '0')} </h1>;\n};\n\nexport default React.memo(Minute);\n","import React from \"react\";\n\nconst Seconds = ({ sec }) => {\n  console.log(\"sec rendered\");\n  return <h1> {sec.toString().padStart(2, '0')} </h1>;\n};\n\nexport default React.memo(Seconds);\n","import React, { useState } from \"react\";\nimport Hour from \"./Hour\";\nimport Minute from \"./Minute\";\nimport Seconds from \"./Seconds\";\n\nconst Clock = () => {\n  let [time, setTime] = useState(new Date());\n  let [hours, setHours] = useState(time.getHours());\n  let [min, setMin] = useState(time.getMinutes());\n  let [sec, setSec] = useState(time.getSeconds());\n\n  console.log(\"clock rendered\");\n\n  const handleCurrentTime = () => {\n    setTime((time = new Date()));\n\n    if (hours !== time.getHours()) {\n      setHours(time.getHours());\n    }\n\n    if (min !== time.getMinutes()) {\n      setMin(time.getMinutes());\n    }\n\n    if (sec !== time.getSeconds()) {\n      setSec(time.getSeconds());\n    }\n  };\n\n  setInterval(handleCurrentTime, 1000);\n\n  return (\n    <div className=\"clock\">\n      <Hour hours={hours} />\n      <h1>:</h1>\n      <Minute min={min} />\n      <h1>:</h1>\n      <Seconds sec={sec} />\n    </div>\n  );\n};\n\nexport default Clock;\n","import React from \"react\";\n\nconst Optimization = () => {\n  console.log(\"Optimization content rerendered\");\n  return (\n    <div className=\"optimization\">\n      <h3>Optimization:</h3>\n      <ul>\n        <li>Hours and minutes don't re-render when seconds change.</li>\n        <li>\n          Hours don't re-render when minutes change, seconds obviously do.\n        </li>\n        <li>Only seconds re-render every second.</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default React.memo(Optimization);\n","import React from \"react\";\nimport Clock from \"./Clock\";\nimport Optimization from \"./Optimization\";\n\nfunction App() {\n  console.log(\"App rendered\");\n\n  return (\n    <div className=\"container\">\n      <Clock />\n      <Optimization />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//Challenge:\n//1. Given that you can get the current time using:\n\n//Show the latest time in the <h1> when the Get Time button\n//is pressed.\n\n//2. Given that you can get code to be called every second\n//using the setInterval method.\n//Can you get the time in your <h1> to update every second?\n\n//e.g. uncomment the code below to see Hey printed every second.\n// function sayHi() {\n//   console.log(\"Hey\");\n// }\n// setInterval(sayHi, 1000);\n"],"sourceRoot":""}